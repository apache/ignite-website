---
title: "Apache Ignite 1.9 Released"
author: "Denis Magda"
date: 2017-03-07
tags:
    - apache
---

p
  | Apache Ignite community is pleased to announce Apache Ignite 1.9 - the next minor release of a well-known in-memory data fabric. The release, as usual, encompasses many bug fixes, performance improvements and fresh features. Below you can see a description of the most significant updates.
p
  b Kubernetes Support
p
  | Apache Ignite was integrated with Kubernetes which is a modern open source container cluster manager. The integration helps to simplify a deployment of an Apache Ignite cluster in environments managed by Kubernetes and let the latter care of resources management, cluster&apos;s scalability and lifecycle.
<!-- end -->
p
  | For instance, you&apos;re no longer need to monitor a cluster state constantly to be sure that the number of cluster nodes doesn&apos;t go, let&apos;s say, below 4. If Kubernetes sees that one cluster node is disconnected and only 3 are left then it will start one more automatically to meet the deployment requirements.
p
  | Refer to 
  a(href='https://apacheignite.readme.io/docs/kubernetes-deployment' target='_blank') Kubernetes Deployment Getting Started
  |  if this is the feature of interest for you.
p
  b Performance Optimizations and Benchmarks Automation
p
  | Apache Ignite 1.9 can boast of much better performance for core cache operations and SQL queries in compare to the previous Apache Ignite 1.8 release. In general, we observe up to 40% performance increase for particular operations.
p
  | It&apos;s no longer a challenge to reproduce the performance numbers. Starting with Apache Ignite 1.9 release all the benchmarks are delivered in every Apache Ignite distribution and can be easily executed in your own environment.
p
  b Data Modification Language and Queries Parallelism
p
  | The community keeps spending significant time improving 
  a(href='https://apacheignite.readme.io/docs/sql-grid' target='_blank') SQL Grid
  |  component that empowers Apache Ignite users with in-memory database capabilities.
p
  | In this release, DML (Data Modification Language) support was expanded to the level of 
  a(href='https://apacheignite-net.readme.io/docs/distributed-dml' target='_blank') Ignite.NET
  |  and 
  a(href='https://apacheignite-cpp.readme.io/docs/distributed-dml' target='_blank') Ignite.C++
  |  APIs. Plus, a 
  a(href='https://apacheignite.readme.io/docs/jdbc-driver#streaming-mode' target='_blank') streaming mode
  |  was introduced for DML allowing to execute DML operations even faster for specific scenarios like initial data preloading.
p
  | One more SQL Grid related optimization makes it possible to parallelize a query execution on every Ignite node where the query has been mapped. By default, a query is executed in a single thread on every participating node. However, for a variety of OLAP use cases it might be a bottleneck and this is where the 
  a(href='https://apacheignite.readme.io/docs/sql-performance-and-debugging#section-query-parallelism' target='_blank') query parallelism
  |  can help out.
p
  b Ignite.NET
p
  | Apache Ignite implemented .NET TransactionScope API allowing to work with distributed Apache Ignite transactions fully relaying on standard interfaces available in .NET Framework. Refer to 
  a(href='https://apacheignite-net.readme.io/docs/transactionscope-api' target='_blank') this documentation page
  |  for more information.
p
  b Ignite.C++
p
  | Ignite.C++ introduced support for well-known 
  a(href='https://apacheignite-cpp.readme.io/docs/continuous-queries' target='_blank') continuous queries API
  | . Now, you can listen to data modifications happened on Apache Ignite&apos;s distributed caches side from your C++ applications.
p
  b Spark
p
  | Ignite&rsquo;s spark integration was upgraded to the latest Spark version. Presently, you can leverage from Ignite Shared RDDs in applications using latest Spark version.
p
  b Give a Try
p
  | Go and grab the latest 1.9 release from our 
  a(href='https://ignite.apache.org/download.cgi' target='_blank') main site
  | . Looking forward to your feedback!
